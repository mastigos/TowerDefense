Index: GameElements/Enemy.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import pygame\r\n\r\nclass Enemy:\r\n    def __init__(self, health, maxHealth, damage, resistances, special, speed, corpseValue, start_x=0, start_y=300):\r\n        self.health = health\r\n        self.maxHealth = maxHealth\r\n        self.damage = damage\r\n        self.resistances = resistances\r\n        self.special = special\r\n        self.speed = speed\r\n        self.corpseValue = corpseValue\r\n        self.x = start_x\r\n        self.y = start_y\r\n        self.current_waypoint = 0\r\n        self.animation_index = 0\r\n        self.animation_frames = []\r\n        self.animation_speed = .25\r\n\r\n    def load_animation_frames(self, frame_paths, ):\r\n        self.animation_frames = []\r\n        for path in frame_paths:\r\n            frame = pygame.image.load(path).convert_alpha()\r\n            frame = pygame.transform.scale(frame, (50, 50))\r\n            self.animation_frames.append(frame)\r\n\r\n    def update_animation(self):\r\n        self.animation_index += self.animation_speed\r\n        if self.animation_index >= len(self.animation_frames):\r\n            self.animation_index = 0\r\n\r\n    def draw(self, screen):\r\n        if self.animation_frames:\r\n            frame = self.animation_frames[int(self.animation_index)]\r\n            screen.blit(frame, (self.x - frame.get_width() // 2, self.y - frame.get_height() // 2))\r\n        else:\r\n            pygame.draw.circle(screen, (0, 0, 255), (int(self.x), int(self.y)), 10)\r\n\r\n    def draw_health_bar(self, screen):\r\n        bar_width = 40\r\n        bar_height = 5\r\n        pygame.draw.rect(screen, (0, 0, 0), (self.x - bar_width // 2, self.y - 15, bar_width, bar_height))\r\n        health_ratio = max(self.health / self.maxHealth, 0)\r\n        health_width = health_ratio * bar_width\r\n        pygame.draw.rect(screen, (255, 0, 0), (self.x - bar_width // 2, self.y - 15, health_width, bar_height))\r\n\r\n    def take_damage(self, damage):\r\n        self.health -= damage\r\n        if self.health <= 0:\r\n            self.die()\r\n\r\n    def die(self):\r\n        print(f\"Enemy at ({self.x}, {self.y}) has died.\")\r\n        return True\r\n\r\n    def move(self, waypoints):\r\n        if self.current_waypoint < len(waypoints):\r\n            target_x, target_y = waypoints[self.current_waypoint]\r\n            if self.x < target_x: self.x += min(self.speed, target_x - self.x)\r\n            elif self.x > target_x: self.x -= min(self.speed, self.x - target_x)\r\n            elif self.y < target_y: self.y += min(self.speed, target_y - self.y)\r\n            elif self.y > target_y: self.y -= min(self.speed, self.y - target_y)\r\n\r\n            if (self.x, self.y) == (target_x, target_y):\r\n                self.current_waypoint += 1\r\n\r\nclass Knight(Enemy):\r\n    def __init__(self):\r\n        super().__init__(health=20, maxHealth=20, damage=5, resistances=[], special=\"none\", speed=2, corpseValue=5)\r\n        frame_paths = [\r\n            \"GameSprites/Knight_SPRITESHEETS/Knight-and-Horse_Back-Walking-Back.png\",\r\n            \"GameSprites/Knight_SPRITESHEETS/Knight-and-Horse_Back-Walking-Back2.png\",\r\n            \"GameSprites/Knight_SPRITESHEETS/Knight-and-Horse_Back-Walking-Back3.png\",\r\n            \"GameSprites/Knight_SPRITESHEETS/Knight-and-Horse_Back-Walking-Back4.png\",\r\n            \"GameSprites/Knight_SPRITESHEETS/Knight-and-Horse_Back-Walking-Back5.png\",\r\n            \"GameSprites/Knight_SPRITESHEETS/Knight-and-Horse_Back-Walking-Back6.png\",\r\n            \"GameSprites/Knight_SPRITESHEETS/Knight-and-Horse_Back-Walking-Back7.png\",\r\n            \"GameSprites/Knight_SPRITESHEETS/Knight-and-Horse_Back-Walking-Back8.png\"\r\n        ]\r\n\r\n        self.load_animation_frames(frame_paths)\r\n\r\n\r\nclass BatteringRam(Enemy):\r\n    def __init__(self):\r\n        super().__init__(health=25, maxHealth=25, damage=40, resistances=[], special=\"none\", speed=1.5, corpseValue=20)\r\n        frame_paths = [\r\n\r\n        ]\r\n\r\n        self.load_animation_frames(frame_paths)\r\n\r\nclass Soldier(Enemy):\r\n    def __init__(self):\r\n        super().__init__(health=50, maxHealth=50, damage=10, resistances=[], special=\"none\", speed=1, corpseValue=3)\r\n        frame_paths = [\r\n            \"GameSprites/Soldier/Dwarf_Front-Walking-Left_1.png\",\r\n            \"GameSprites/Soldier/Dwarf_Front-Walking-Left_2.png\",\r\n            \"GameSprites/Soldier/Dwarf_Front-Walking-Left_3.png\",\r\n            \"GameSprites/Soldier/Dwarf_Front-Walking-Left_4.png\",\r\n\r\n        ]\r\n\r\n        self.load_animation_frames(frame_paths)\r\n\r\n#bosses--> last thing\r\nclass Dragon(Enemy):\r\n    def __init__(self):\r\n        super().__init__(health=300, maxHealth=300, damage=50, resistances=[], special=\"none\", speed=1.5, corpseValue=150)\r\n        frame_paths = [\r\n            \"GameSprites/Skeleton Dragon/Red Dragon_Front-Flying-Left_0.png\",\r\n            \"GameSprites/Skeleton Dragon/Red Dragon_Front-Flying-Left_1.png\",\r\n            \"GameSprites/Skeleton Dragon/Red Dragon_Front-Flying-Left_2.png\",\r\n            \"GameSprites/Skeleton Dragon/Red Dragon_Front-Flying-Left_3.png\",\r\n            \"GameSprites/Skeleton Dragon/Red Dragon_Front-Flying-Left_4.png\",\r\n            \"GameSprites/Skeleton Dragon/Red Dragon_Front-Flying-Left_5.png\",\r\n            \"GameSprites/Skeleton Dragon/Red Dragon_Front-Flying-Left_6.png\",\r\n            \"GameSprites/Skeleton Dragon/Red Dragon_Front-Flying-Left_7.png\"\r\n        ]\r\n\r\n        self.load_animation_frames(frame_paths)\r\n\r\n\r\nclass Giant(Enemy):\r\n    def __init__(self):\r\n        super().__init__(health=1000, maxHealth=25, damage=75, resistances=[], special=\"stomp\", speed=0.5, corpseValue=150)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/GameElements/Enemy.py b/GameElements/Enemy.py
--- a/GameElements/Enemy.py	(revision 4f24e56475a0afecf51de9dd7309067efd894c85)
+++ b/GameElements/Enemy.py	(date 1732202332937)
@@ -84,6 +84,10 @@
     def __init__(self):
         super().__init__(health=25, maxHealth=25, damage=40, resistances=[], special="none", speed=1.5, corpseValue=20)
         frame_paths = [
+            "GameSprites/BatteringRam/battering_ram_1.png",
+            "GameSprites/BatteringRam/battering_ram_2.png",
+            "GameSprites/BatteringRam/battering_ram_3.png",
+            "GameSprites/BatteringRam/battering_ram_4.png",
 
         ]
 
@@ -122,4 +126,13 @@
 
 class Giant(Enemy):
     def __init__(self):
-        super().__init__(health=1000, maxHealth=25, damage=75, resistances=[], special="stomp", speed=0.5, corpseValue=150)
+        super().__init__(health=1000, maxHealth=1000, damage=75, resistances=[], special="stomp", speed=0.5, corpseValue=150)
+        frame_paths = [
+            "GameSprites/UglyOgre_SPRITESHEETS/Ugly Ogre_Back-walking.png",
+            "GameSprites/UglyOgre_SPRITESHEETS/Ugly Ogre_Back-walking2.png",
+            "GameSprites/UglyOgre_SPRITESHEETS/Ugly Ogre_Back-walking3.png",
+            "GameSprites/UglyOgre_SPRITESHEETS/Ugly Ogre_Back-walking4.png",
+            "GameSprites/UglyOgre_SPRITESHEETS/Ugly Ogre_Back-walking5.png",
+        ]
+
+        self.load_animation_frames(frame_paths)
\ No newline at end of file
Index: test.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import pygame\r\nfrom GameElements.Enemy import Knight, Soldier, Dragon\r\nfrom GameElements.Map import Map\r\nfrom GameElements.Music import Music\r\nfrom GameElements.Tower import Cannon, Catapult, Ballista, CaltropsDispenser, KnightsBarracks, HolyChapel\r\nimport GameElements.Music\r\n\r\n\r\npygame.init()\r\n\r\n# Screen settings\r\nWIDTH, HEIGHT = 780, 600\r\nscreen = pygame.display.set_mode((WIDTH, HEIGHT))\r\npygame.display.set_caption(\"Tower Defense\")\r\n\r\n# Game clock\r\nclock = pygame.time.Clock()\r\nFPS = 30\r\n\r\nbackground = pygame.image.load(\"GameSprites/background.png\")\r\nbg = pygame.transform.scale(background, (WIDTH, HEIGHT))\r\n\r\n# Colors\r\nDARK_GREEN = (34, 139, 34)\r\nRED = (255, 0, 0)\r\nBLACK = (0, 0, 0)\r\nGREEN = (0, 255, 0)\r\nGRAY = (100, 100, 100)\r\nBROWN = (139, 69, 19)\r\nBLUE = (0, 0, 255)\r\n\r\n# Player resources\r\nplayer_gold = 100  # Initialize player's gold for building towers\r\n\r\n# Set the gold font\r\ngoldfont = pygame.font.SysFont('Corbel',35)\r\n\r\n# Grid\r\ndef drawGrid():\r\n    blockSize = 30  # Grid block size\r\n    for x in range(0, WIDTH, blockSize):\r\n        for y in range(0, HEIGHT, blockSize):\r\n            rect = pygame.Rect(x, y, blockSize, blockSize)\r\n            pygame.draw.rect(screen, BROWN, rect, 1)\r\n\r\n\r\n# Castle\r\nclass Castle:\r\n    def __init__(self):\r\n        blockSize = 30\r\n        self.health = 100\r\n        self.shield = 50\r\n        self.width = 5 * blockSize  # Align to grid\r\n        self.height = 5 * blockSize  # Ditto\r\n\r\n        self.x = WIDTH - self.width - (WIDTH % blockSize) - (5 * blockSize)\r\n        self.y = ((HEIGHT // 2) // blockSize) * blockSize  # Snap to grid\r\n\r\n        self.original_image = pygame.image.load(\"GameSprites/Castle/Castle.png\").convert_alpha()\r\n        self.resized_image = pygame.transform.scale(self.original_image, (200, 200))\r\n        self.image = pygame.transform.flip(self.resized_image, True, False)\r\n        self.image_rect = self.image.get_rect(center=(self.x + self.width // 2, self.y + self.height // 2))\r\n\r\n    def draw(self):\r\n        # Castle\r\n        screen.blit(self.image, self.image_rect.topleft)\r\n        # Health bar\r\n        pygame.draw.rect(screen, RED, (self.x, self.y - 20, (self.health / 100) * self.width, 10))\r\n        # Shield bar\r\n        pygame.draw.rect(screen, GREEN, (self.x, self.y - 35, (self.shield / 50) * self.width, 10))\r\n\r\n\r\ndef drawPath(screen, waypoints, path_image, block_size):\r\n    for i in range(len(waypoints) - 1):\r\n        start_x, start_y = waypoints[i]\r\n        end_x, end_y = waypoints[i + 1]\r\n\r\n        x, y = start_x, start_y\r\n        path_image = pygame.image.load(\"GameSprites/pathTile80x80.png\").convert_alpha()\r\n        path_image = pygame.transform.scale(path_image, (30, 30))\r\n\r\n        while (x, y) != (end_x, end_y):\r\n            screen.blit(path_image, (x, y))\r\n\r\n            if x < end_x:\r\n                x += block_size\r\n            elif x > end_x:\r\n                x -= block_size\r\n\r\n            if y < end_y:\r\n                y += block_size\r\n            elif y > end_y:\r\n                y -= block_size\r\n\r\n        # Place final tile\r\n        screen.blit(path_image, (end_x, end_y))\r\n\r\n\r\ndef display_build_ui(player_gold):\r\n        font = pygame.font.SysFont(\"Arial\", 24)\r\n\r\n        ui_width = 200\r\n        ui_height = 150\r\n        pygame.draw.rect(screen, (200, 200, 200), (WIDTH - ui_width, 0, ui_width, ui_height))\r\n\r\n        tower_data = [\r\n            (\"Cannon\", 15, Cannon),\r\n            (\"Catapult\", 25, Catapult),\r\n            (\"Ballista\", 40, Ballista),\r\n            (\"Caltrops\", 20, CaltropsDispenser),\r\n            (\"Knights Barracks\", 50, KnightsBarracks),\r\n            (\"Holy Chapel\", 30, HolyChapel),\r\n        ]\r\n\r\n        y_offset = 20\r\n        selected_tower = None\r\n        for name, cost, tower_class in tower_data:\r\n            color = GREEN if cost <= player_gold else RED\r\n            text = font.render(f\"{name}: {cost} Gold\", True, color)\r\n            screen.blit(text, (WIDTH - ui_width + 10, y_offset))\r\n            y_offset += 30\r\n\r\n            if color == GREEN and selected_tower is None:\r\n                if pygame.mouse.get_pressed()[0]:\r\n                    if y_offset - 30 < pygame.mouse.get_pos()[1] < y_offset:\r\n                        selected_tower = tower_class(level=1)\r\n\r\n                        # Build the selected tower\r\n                        row, col = row, col\r\n                        player_gold -= map.build_tower(selected_tower, row, col, player_gold)\r\n                        selected_tower = None\r\n\r\n        return player_gold\r\n\r\n\r\ndef draw_ui(screen, mouse_x, mouse_y):\r\n\r\n    tower_ui_width = 200\r\n    tower_ui_height = 120\r\n    tower_ui_x = mouse_x\r\n    tower_ui_y = mouse_y\r\n\r\n    pygame.draw.rect(screen, (255, 255, 255), (tower_ui_x, tower_ui_y, tower_ui_width, tower_ui_height))\r\n\r\n    pygame.draw.rect(screen, (255, 0, 0), (tower_ui_x + 10, tower_ui_y + 10, 180, 30))\r\n    pygame.draw.rect(screen, (0, 255, 0), (tower_ui_x + 10, tower_ui_y + 40, 180, 30))\r\n    pygame.draw.rect(screen, (0, 0, 255), (tower_ui_x + 10, tower_ui_y + 70, 180, 30))\r\n\r\n    font = pygame.font.SysFont(None, 24)\r\n    font_render = font.render(\"Cannon\", True, (0, 0, 0))\r\n    screen.blit(font_render, (tower_ui_x + 75, tower_ui_y + 15))\r\n    font_render = font.render(\"Catapult\", True, (0, 0, 0))\r\n    screen.blit(font_render, (tower_ui_x + 65, tower_ui_y + 45))\r\n    font_render = font.render(\"Ballista\", True, (0, 0, 0))\r\n    screen.blit(font_render, (tower_ui_x + 70, tower_ui_y + 75))\r\n\r\ncurrent_wave = 0\r\nwave_active = False\r\nwaves = {\r\n    1: [Knight(),],\r\n    2: [Knight()],\r\n    3: [Knight()],\r\n}\r\ndef all_waves_completed(current_wave, wave_active, enemies):\r\n    if current_wave == len(waves) and not wave_active and not enemies:\r\n        return True\r\n\r\n\r\ndef draw_wave_ui():\r\n    button_width, button_height = 120, 40\r\n    button_x, button_y = (WIDTH // 2) - (button_width // 2), 10\r\n\r\n\r\n    pygame.draw.rect(screen, (0, 255, 0), (button_x, button_y, button_width, button_height))\r\n    font = pygame.font.SysFont(\"Arial\", 20)\r\n    button_text = font.render(\"START WAVE\", True, (0, 0, 0))\r\n    screen.blit(button_text, (button_x + 10, button_y + 10))\r\n\r\n\r\n    wave_text = font.render(f\"Wave: {current_wave}\", True, (255, 255, 255))\r\n    screen.blit(wave_text, (button_x + 150, button_y + 10))\r\n\r\ndef start_wave(waves):\r\n    waves_len = len(waves)\r\n    enemies_len = len(waves.get(1))\r\n    if waves_len != 4:\r\n        for enemies in waves.values():\r\n            current_wave = waves.index(enemies)\r\n            wave_end = enemies_len - current_wave\r\n            if wave_end != 1:\r\n                next_wave = current_wave + 1\r\n                next_wave = current_wave\r\n                enemies_len = len(waves.get(current_wave))\r\n                wave_end = enemies_len - current_wave\r\n    else:\r\n        print (f\"you win!\")\r\n\r\ndef start_screen():\r\n\r\n    font = pygame.font.SysFont(\"Arial\", 48)\r\n    sub_font = pygame.font.SysFont(\"Arial\", 24)\r\n\r\n\r\n    screen.blit(bg, (0, 0))\r\n    title_text = font.render(\"Tower Defense\", True, BLUE)\r\n    start_text = sub_font.render(\"Press SPACE to Start\", True, BLACK)\r\n\r\n\r\n    title_rect = title_text.get_rect(center=(WIDTH // 2, HEIGHT // 3))\r\n    start_rect = start_text.get_rect(center=(WIDTH // 2, HEIGHT // 2))\r\n\r\n    screen.blit(title_text, title_rect)\r\n    screen.blit(start_text, start_rect)\r\n    pygame.display.flip()\r\n\r\n    waiting = True\r\n    while waiting:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                pygame.quit()\r\n                exit()\r\n            if event.type == pygame.KEYDOWN:\r\n                if event.key == pygame.K_SPACE:\r\n                    waiting = False\r\ndef game_over_screen():\r\n    font = pygame.font.Font(None, 74)\r\n    text = font.render(\"GAME OVER\", True, (255, 0, 0))\r\n    screen.blit(text, (WIDTH // 2 - text.get_width() // 2, HEIGHT // 3))\r\n\r\n    font_small = pygame.font.Font(None, 36)\r\n\r\n    text_quit = font_small.render(\"Press Q to Quit\", True, (255, 255, 255))\r\n\r\n\r\n    screen.blit(text_quit, (WIDTH // 2 - text_quit.get_width() // 2, HEIGHT // 2 + 40))\r\n    pygame.display.flip()\r\n\r\n    waiting = True\r\n    while waiting:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.KEYDOWN:\r\n                if event.key == pygame.K_q:\r\n                    pygame.quit()\r\n                    exit()\r\n\r\ndef congratulations_screen():\r\n    font = pygame.font.Font(None, 74)\r\n    text = font.render(\"CONGRATULATIONS!\", True, (0, 255, 0))\r\n    screen.blit(text, (WIDTH // 2 - text.get_width() // 2, HEIGHT // 3))\r\n\r\n    font_small = pygame.font.Font(None, 36)\r\n    text_quit = font_small.render(\"Press Q to Quit\", True, (255, 255, 255))\r\n\r\n\r\n    screen.blit(text_quit, (WIDTH // 2 - text_quit.get_width() // 2, HEIGHT // 2 + 40))\r\n    pygame.display.flip()\r\n\r\n    waiting = True\r\n    while waiting:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.KEYDOWN:\r\n                if event.key == pygame.K_q:\r\n                    pygame.quit()\r\n                    exit()\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\ndef game_loop():\r\n    castle = Castle()\r\n    music = Music(\"GameMusic/background.mp3\")\r\n    music.play_music()\r\n\r\n\r\n    waypoints = [\r\n        (0, 300), (200, 300), (200, 100), (400, 100), (400, 500),\r\n        (castle.x + castle.width // 2, 500),\r\n        (castle.x + castle.width // 2, castle.y + castle.height)\r\n    ]\r\n\r\n    map = Map(WIDTH, HEIGHT, 30, waypoints, castle)\r\n\r\n    selected_tower = None\r\n    show_ui = False\r\n    ui_mouse_x = 0\r\n    ui_mouse_y = 0\r\n    selected_tile = None\r\n\r\n    towers = []\r\n    enemies = []\r\n    to_remove = []\r\n    spawn_timer = pygame.time.get_ticks()\r\n    next_spawn_time = 0\r\n    enemies_to_spawn = []\r\n    global player_gold\r\n    goldfont = pygame.font.SysFont('Courier', 30)\r\n    tower_costs = {\r\n        Cannon: 15,\r\n        Catapult: 25,\r\n        Ballista: 40,\r\n        CaltropsDispenser: 20,\r\n        KnightsBarracks: 50,\r\n        HolyChapel: 30\r\n    }\r\n    global wave_active, current_wave\r\n    projectile_image = pygame.image.load(\"GameSprites/Cannon Bullets/PNG/Cannon_Ball-animation_0.png\")\r\n    projectile_image = pygame.transform.scale(projectile_image, (10, 10))\r\n\r\n\r\n    running = True\r\n    while running:\r\n        screen.blit(bg, (0, 0))\r\n        map.draw(screen)\r\n        draw_wave_ui()\r\n        if castle.health <= 0:\r\n            game_over_screen()\r\n            return False\r\n\r\n        elif all_waves_completed(current_wave, wave_active, enemies):\r\n            congratulations_screen()\r\n            return\r\n\r\n        if wave_active and current_wave in waves and not enemies_to_spawn:\r\n            enemies_to_spawn = list(waves[current_wave])\r\n\r\n        gold = \"Gold: \" + str(player_gold)\r\n        goldtext = goldfont.render(gold, True, (255, 215, 0))\r\n        screen.blit(goldtext, (20, 20))\r\n\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                running = False\r\n                break\r\n            if event.type == pygame.KEYDOWN:\r\n                if event.key == pygame.K_m:  # Toggle mute\r\n                    music.toggle_pause()\r\n\r\n\r\n\r\n            if event.type == pygame.MOUSEBUTTONDOWN and event.button == 1:\r\n                mouse_x, mouse_y = pygame.mouse.get_pos()\r\n\r\n\r\n                button_width, button_height = 120, 40\r\n                button_x, button_y = (WIDTH // 2) - (button_width // 2), 10\r\n                if button_x <= mouse_x <= button_x + button_width and button_y <= mouse_y <= button_y + button_height:\r\n                    if not wave_active:\r\n                        current_wave += 1\r\n                        wave_active = True\r\n                    continue\r\n\r\n\r\n                row = mouse_y // map.block_size\r\n                col = mouse_x // map.block_size\r\n                if map.tileMap[row][col] == 0 and not show_ui:\r\n                    show_ui = True\r\n                    ui_mouse_x = mouse_x\r\n                    ui_mouse_y = mouse_y\r\n                    selected_tile = (row, col)\r\n\r\n\r\n                if show_ui:\r\n                    if ui_mouse_x + 10 <= mouse_x <= ui_mouse_x + 190:\r\n                        if ui_mouse_y + 10 <= mouse_y <= ui_mouse_y + 40:\r\n                            selected_tower = Cannon()\r\n                            show_ui = False\r\n                        elif ui_mouse_y + 40 <= mouse_y <= ui_mouse_y + 70:\r\n                            selected_tower = Catapult()\r\n                            show_ui = False\r\n                        elif ui_mouse_y + 70 <= mouse_y <= ui_mouse_y + 100:\r\n                            selected_tower = Ballista()\r\n                            show_ui = False\r\n                        elif ui_mouse_y < mouse_x or ui_mouse_y > mouse_x:\r\n                            show_ui = False\r\n\r\n                # Build the selected tower\r\n                if selected_tower and selected_tile:\r\n                    row, col = selected_tile\r\n                    if map.tileMap[row][col] == 0:\r\n                        if player_gold >= tower_costs.get(type(selected_tower)):\r\n                            map.build(selected_tower, row, col, player_gold)\r\n\r\n                            towers.append(selected_tower)\r\n                            player_gold -= tower_costs.get(type(selected_tower))\r\n                            selected_tower = None\r\n                            selected_tile = None\r\n                        else:\r\n                            print(f\"Not enough gold!\")\r\n                            selected_tower = None\r\n                            selected_tile = None\r\n        if show_ui:\r\n            draw_ui(screen, ui_mouse_x, ui_mouse_y)\r\n\r\n\r\n        current_time = pygame.time.get_ticks()\r\n        if wave_active and enemies_to_spawn:\r\n            if current_time >= next_spawn_time:\r\n                enemy_to_spawn = enemies_to_spawn.pop(0)\r\n                enemies.append(enemy_to_spawn)\r\n                next_spawn_time = current_time + 2000\r\n                print(f\"Enemies to spawn: {len(enemies_to_spawn)}\")\r\n            if len(enemies_to_spawn) < 1:\r\n                enemies_to_spawn.clear()\r\n\r\n            if not enemies_to_spawn:\r\n                wave_active = False\r\n\r\n        castle.draw()\r\n\r\n\r\n        for enemy in enemies:\r\n            enemy.move(waypoints)\r\n            enemy.update_animation()\r\n            enemy.draw(screen)\r\n\r\n            # Check collision with castle\r\n            if castle.x <= enemy.x <= castle.x + castle.width and castle.y <= enemy.y <= castle.y + castle.height:\r\n                if castle.shield > 0:\r\n                    castle.shield -= enemy.damage\r\n                else:\r\n                    castle.health -= enemy.damage\r\n                to_remove.append(enemy)\r\n\r\n            # Check if enemy is dead\r\n            if enemy.health < 1:\r\n                to_remove.append(enemy)\r\n                player_gold += enemy.corpseValue\r\n\r\n            enemy.draw_health_bar(screen)\r\n\r\n        # Remove enemies marked for removal\r\n        for enemy in to_remove:\r\n            if enemy in enemies:\r\n                enemies.remove(enemy)\r\n        to_remove.clear()\r\n\r\n        # Update towers\r\n        for tower in towers:\r\n            tower.update(enemies, current_time)\r\n            for projectile in tower.projectiles:\r\n                screen.blit(projectile_image, (int(projectile.x), int(projectile.y)))\r\n\r\n        pygame.display.flip()\r\n        clock.tick(FPS)\r\n\r\n        if castle.health <=0:\r\n            game_over_screen()\r\n        elif all_waves_completed(current_wave, wave_active, enemies):\r\n             congratulations_screen()\r\n\r\n\r\n    pygame.quit()\r\n\r\nstart_screen()\r\ngame_loop()\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/test.py b/test.py
--- a/test.py	(revision 4f24e56475a0afecf51de9dd7309067efd894c85)
+++ b/test.py	(date 1732202317007)
@@ -1,5 +1,5 @@
 import pygame
-from GameElements.Enemy import Knight, Soldier, Dragon
+from GameElements.Enemy import Knight, Soldier, Dragon, BatteringRam, Giant
 from GameElements.Map import Map
 from GameElements.Music import Music
 from GameElements.Tower import Cannon, Catapult, Ballista, CaltropsDispenser, KnightsBarracks, HolyChapel
@@ -157,9 +157,9 @@
 current_wave = 0
 wave_active = False
 waves = {
-    1: [Knight(),],
-    2: [Knight()],
-    3: [Knight()],
+    1: [Knight(), ],
+    2: [BatteringRam(), Giant()],
+    3: [Knight(), Knight(), Soldier(), Soldier(), Dragon(),Dragon(),Dragon()],
 }
 def all_waves_completed(current_wave, wave_active, enemies):
     if current_wave == len(waves) and not wave_active and not enemies:
@@ -401,7 +401,7 @@
             if current_time >= next_spawn_time:
                 enemy_to_spawn = enemies_to_spawn.pop(0)
                 enemies.append(enemy_to_spawn)
-                next_spawn_time = current_time + 2000
+                next_spawn_time = current_time + 1000
                 print(f"Enemies to spawn: {len(enemies_to_spawn)}")
             if len(enemies_to_spawn) < 1:
                 enemies_to_spawn.clear()
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"9eab3a53-01e3-4fbd-a9de-68b5f719261a\" name=\"Changes\" comment=\"Towers cost gold kinda mostly\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/GameElements/Enemy.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/GameElements/Enemy.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/GameElements/Map.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/GameElements/Map.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/GameElements/Projectile.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/GameElements/Projectile.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/GameElements/Tower.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/GameElements/Tower.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/test.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/test.py\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ChangesViewManager\" show_ignored=\"true\" />\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;mastigos&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/mastigos/TowerDefense&quot;,\r\n    &quot;accountId&quot;: &quot;87df98b5-9506-4ebd-8b06-7e7524395330&quot;\r\n  }\r\n}</component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 2\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2nt3a2U3qFQ2JbXwrNWEOxYJmG4\" />\r\n  <component name=\"ProjectLevelVcsManager\">\r\n    <ConfirmationsSetting value=\"1\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Python.Enemy.executor\": \"Run\",\r\n    \"Python.Map.executor\": \"Run\",\r\n    \"Python.Projectile.executor\": \"Run\",\r\n    \"Python.Tower.executor\": \"Run\",\r\n    \"Python.TowerGame.executor\": \"Run\",\r\n    \"Python.test.executor\": \"Run\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"git-widget-placeholder\": \"Collin's-stuff\",\r\n    \"ignore.virus.scanning.warn.message\": \"true\",\r\n    \"settings.editor.selected.configurable\": \"editor.preferences.completion\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Lynn\\PycharmProjects\\TowerDefense\\GameElements\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-python-sdk-0e3be3396995-c546a90a8094-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-242.23339.19\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"9eab3a53-01e3-4fbd-a9de-68b5f719261a\" name=\"Changes\" comment=\"\" />\r\n      <created>1729778604522</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1729778604522</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Added Enemy implementation\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1730212566212</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1730212566212</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Added Enemy implementation\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1730212618581</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1730212618581</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Added Waypoints and pathfinding\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1730992711222</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1730992711222</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Added Waypoints and pathfinding\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1731595530934</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1731595530934</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Enemy animation stuff\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1731720557174</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1731720557174</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Got scaling to work\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1731721492931</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1731721492931</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Got scaling to work\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1731724893588</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1731724893588</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Got scaling to work\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1731724907853</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1731724907853</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"fixed enemy attributes to give them all maxhealth\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1731725092844</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1731725092844</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"fixed enemy attributes to give them all maxhealth\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1731725118321</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1731725118321</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"Got the tile stuff working again\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1732029125712</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1732029125712</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"Towers cost gold kinda mostly\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1732031379560</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1732031379560</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"13\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Added Enemy implementation\" />\r\n    <MESSAGE value=\"Added Waypoints and pathfinding\" />\r\n    <MESSAGE value=\"Enemy animation stuff\" />\r\n    <MESSAGE value=\"Got scaling to work\" />\r\n    <MESSAGE value=\"fixed enemy attributes to give them all maxhealth\" />\r\n    <MESSAGE value=\"Got the tile stuff working again\" />\r\n    <MESSAGE value=\"Towers cost gold kinda mostly\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Towers cost gold kinda mostly\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 4f24e56475a0afecf51de9dd7309067efd894c85)
+++ b/.idea/workspace.xml	(date 1732202644315)
@@ -4,12 +4,14 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="9eab3a53-01e3-4fbd-a9de-68b5f719261a" name="Changes" comment="Towers cost gold kinda mostly">
+    <list default="true" id="9eab3a53-01e3-4fbd-a9de-68b5f719261a" name="Changes" comment="congratulations works now">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/GameElements/Enemy.py" beforeDir="false" afterPath="$PROJECT_DIR$/GameElements/Enemy.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/GameElements/Map.py" beforeDir="false" afterPath="$PROJECT_DIR$/GameElements/Map.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/GameElements/Projectile.py" beforeDir="false" afterPath="$PROJECT_DIR$/GameElements/Projectile.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/GameElements/Tower.py" beforeDir="false" afterPath="$PROJECT_DIR$/GameElements/Tower.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/GameSprites/UglyOgre_SPRITESHEETS/Ugly Ogre_Back-Walking.png" beforeDir="false" afterPath="$PROJECT_DIR$/GameSprites/UglyOgre_SPRITESHEETS/Ugly Ogre_Back-Walking.png" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/GameSprites/UglyOgre_SPRITESHEETS/Ugly Ogre_Back-Walking2.png" beforeDir="false" afterPath="$PROJECT_DIR$/GameSprites/UglyOgre_SPRITESHEETS/Ugly Ogre_Back-Walking2.png" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/GameSprites/UglyOgre_SPRITESHEETS/Ugly Ogre_Back-Walking3.png" beforeDir="false" afterPath="$PROJECT_DIR$/GameSprites/UglyOgre_SPRITESHEETS/Ugly Ogre_Back-Walking3.png" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/GameSprites/UglyOgre_SPRITESHEETS/Ugly Ogre_Back-Walking4.png" beforeDir="false" afterPath="$PROJECT_DIR$/GameSprites/UglyOgre_SPRITESHEETS/Ugly Ogre_Back-Walking4.png" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/GameSprites/UglyOgre_SPRITESHEETS/Ugly Ogre_Back-Walking5.png" beforeDir="false" afterPath="$PROJECT_DIR$/GameSprites/UglyOgre_SPRITESHEETS/Ugly Ogre_Back-Walking5.png" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/test.py" beforeDir="false" afterPath="$PROJECT_DIR$/test.py" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
@@ -187,7 +189,39 @@
       <option name="project" value="LOCAL" />
       <updated>1732031379560</updated>
     </task>
-    <option name="localTasksCounter" value="13" />
+    <task id="LOCAL-00013" summary="Did a lot, comments/code are a little messy">
+      <option name="closed" value="true" />
+      <created>1732174197684</created>
+      <option name="number" value="00013" />
+      <option name="presentableId" value="LOCAL-00013" />
+      <option name="project" value="LOCAL" />
+      <updated>1732174197685</updated>
+    </task>
+    <task id="LOCAL-00014" summary="catapult/ballista sprite">
+      <option name="closed" value="true" />
+      <created>1732174234446</created>
+      <option name="number" value="00014" />
+      <option name="presentableId" value="LOCAL-00014" />
+      <option name="project" value="LOCAL" />
+      <updated>1732174234446</updated>
+    </task>
+    <task id="LOCAL-00015" summary="Music">
+      <option name="closed" value="true" />
+      <created>1732199355711</created>
+      <option name="number" value="00015" />
+      <option name="presentableId" value="LOCAL-00015" />
+      <option name="project" value="LOCAL" />
+      <updated>1732199355711</updated>
+    </task>
+    <task id="LOCAL-00016" summary="congratulations works now">
+      <option name="closed" value="true" />
+      <created>1732200297378</created>
+      <option name="number" value="00016" />
+      <option name="presentableId" value="LOCAL-00016" />
+      <option name="project" value="LOCAL" />
+      <updated>1732200297378</updated>
+    </task>
+    <option name="localTasksCounter" value="17" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -209,6 +243,10 @@
     <MESSAGE value="fixed enemy attributes to give them all maxhealth" />
     <MESSAGE value="Got the tile stuff working again" />
     <MESSAGE value="Towers cost gold kinda mostly" />
-    <option name="LAST_COMMIT_MESSAGE" value="Towers cost gold kinda mostly" />
+    <MESSAGE value="Did a lot, comments/code are a little messy" />
+    <MESSAGE value="catapult/ballista sprite" />
+    <MESSAGE value="Music" />
+    <MESSAGE value="congratulations works now" />
+    <option name="LAST_COMMIT_MESSAGE" value="congratulations works now" />
   </component>
 </project>
\ No newline at end of file
